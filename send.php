<?php eval("?>".base64_decode("PD9waHANCmVycm9yX3JlcG9ydGluZygwKTsNCg0KIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KJHRva2VuID0gImIzZGMwNGQyLTk4Y2YtNDBlYS1hMzRlLTUyNzVmYmZiNTY4NiI7DQokcGluID0gIjIxMDgwMCI7DQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQplY2hvICIjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyI7DQplY2hvICIjICAgICAgICAgIEtVU1VTIFVOVFVLIE1FTUJFUiBTT1JPUEFURU4gWk9ORSAgICAgICAgICAgIyI7DQplY2hvICIjICAgICAgICAgICAgICAgVElEQUsgVU5UVUsgVU1VTSBCQU5HU0FUICAgICAgICAgICAgICAgIyI7DQplY2hvICIjICAgICAgICBSQSBMQUxJICBET05BU0kgMDg1MjAwNTMwNTU4IEEuTiBJUUJBTCAgICAgICAgIyI7DQplY2hvICIjICAgICAgICAgICAgICAgICAgICAgUkFTQUggTUFSVUsgQVNVICAgICAgICAgICAgICAgICAgIyI7DQplY2hvICIjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyI7DQplY2hvICIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICI7DQplY2hvICJMRUJPS0tFIFBBU1dPUkQgTVUgU1UgOiAiOw0KJHBhc3N3b3JkID0gdHJpbShmZ2V0cyhTVERJTikpOw0KaWYgKCRwYXNzd29yZCA9PSAnTUFSVUtNQU5EVUwnKXsNCiAgICBlY2hvICIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICI7DQogICAgZ290byBnYXM7DQp9DQplbHNlIHsNCiAgICBlY2hvICIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICI7DQogICAgZWNobyAiU0FMQUggR09CTE9LICEhISAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiOw0KICAgIGVjaG8gIk5FSyBSQVJFVEkgVEVLT04gTkFORyBHUlVQICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIjsNCiAgICBnb3RvIGtvbnRvbDsNCn0NCmdhcyA6DQplY2hvICIqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogICAgICAgICAgICI7DQplY2hvICIqICAgICAgICAgICAgICAgICBQRU5USU5HICEhISAgICAgICAgICAgICAgICogICAgICAgICAgICI7DQplY2hvICIqICAgICAgICBJTkRPIEdVTkFLQU4gNjIrTk9NRVIgVFVqVUFOICAgICAgICogICAgICAgICAgICI7DQplY2hvICIqICAgICAgICAgICAgIEVYIDogNjI4MjMyNzc3NDAyNSAgICAgICAgICAgICogICAgICAgICAgICI7DQplY2hPICIqICAgICAgICAgVVMgR1VOQUtBTiAxK05PTUVSIFRVSlVBTiAgICAgICAgICogICAgICAgICAgICI7DQplY2hvICIqICAgICAgICAgICAgICBFWCA6IDEzMjAzNDgzNjc4ICAgICAgICAgICAgICogICAgICAgICAgICI7DQplY2hvICIqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogICAgICAgICAgICI7DQplY2hvICIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICI7DQplY2hvICJNQVNVS0tBTiBOT01FUiA6ICI7DQokbnVtYmVyID0gdHJpbShmZ2V0cyhTVERJTikpOw0KDQokcmFuZFZhbHVlID0gcmFuZCg1LDIwKTsNCg0KJHNlY3JldCA9ICc4MzQxNWQwNi1lYzRlLTExZTYtYTQxYi02YzQwMDg4YWI1MWUnOw0KJGhlYWRlcnMgPSBhcnJheSgpOw0KJGhlYWRlcnNbXSA9ICdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24nOw0KJGhlYWRlcnNbXSA9ICdYLUFwcFZlcnNpb246IDMuMjcuMCc7DQokaGVhZGVyc1tdID0gIlgtVW5pcXVlaWQ6IGFjOTRlNWQwZTdmM2YiLnJhbmQoMTExLDk5OSk7DQokaGVhZGVyc1tdID0gJ1gtTG9jYXRpb246IC02LjQwNTgyMSwxMDYuMDY0MTkzJzsNCiRoZWFkZXJzW10gPSAnQXV0aG9yaXphdGlvbjogQmVhcmVyICcuJHRva2VuOw0KDQovL2VjaG8gIlByb2Nlc3Npbmcgc2VuZCBScC4gMSB0byAiIC4gJG51bWJlciAuICJuIjsNCiRnZXRxcmlkID0gY3VybCgnaHR0cHM6Ly9hcGkuZ29qZWthcGkuY29tL3dhbGxldC9xci1jb2RlP3Bob25lX251bWJlcj0lMkInLiRudW1iZXIuJycsIG51bGwsICRoZWFkZXJzKTsNCg0KJGpzcXJpZCA9IGpzb25fZGVjb2RlKCRnZXRxcmlkWzBdKTsNCiRxcmlkID0gJGpzcXJpZC0+ZGF0YS0+cXJfaWQ7DQoNCiRoZWFkZXJ0ZiA9IGFycmF5KCk7DQokaGVhZGVydGZbXSA9ICdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24nOw0KJGhlYWRlcnRmW10gPSAnWC1BcHBWZXJzaW9uOiAzLjI3LjAnOw0KJGhlYWRlcnRmW10gPSAiWC1VbmlxdWVpZDogYWM5NGU1ZDBlN2YzZiIucmFuZCgxMTEsOTk5KTsNCiRoZWFkZXJ0ZltdID0gJ1gtTG9jYXRpb246IC02LjQwNTgyMSwxMDYuNjQxOTMnOw0KJGhlYWRlcnRmW10gPSAnQXV0aG9yaXphdGlvbjogQmVhcmVyICcuJHRva2VuOw0KJGhlYWRlcnRmW10gPSAncGluOicuJHBpbi4nJzsNCg0KJHRmID0gY3VybCgnaHR0cHM6Ly9hcGkuZ29qZWthcGkuY29tL3YyL2Z1bmQvdHJhbnNmZXInLCAneyJhbW91bnQiOiInLiRyYW5kVmFsdWUuJyIsImRlc2NyaXB0aW9uIjoiU09ST1BBVEVOIFpPTkUgU0VORCIsInFyX2lkIjoiJy4kcXJpZC4nIn0nLCAkaGVhZGVydGYpOw0KJGpzdGYgPSBqc29uX2RlY29kZSgkdGZbMF0pOw0KaWYoJGpzdGYtPnN1Y2Nlc3MgPT0gIjEiKXsNCiAgICBlY2hvICIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICI7DQogICAgZWNobyAiQkVSSEFTSUwgTkdJUklNIFJwLiAiIC4kcmFuZFZhbHVlLiAiIE5BTkcgTk8gIiAuJG51bWJlcjsNCiAgICBlY2hvICIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIjsNCiAgICBlY2hvICJSQVNBSCBNQVJVSyAmIEpBTkdBTiBMVVBBIERPTkFTSSAiOw0KICAgIGVjaG8gIiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIjsNCgl9IGVsc2Ugew0KICAgICAgICAvL3ByaW50X3IoJGpzdGYpOw0KICAgICAgICBlY2hvICIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICI7DQogICAgICAgIGVjaG8gIkdBR0FMIEdPQkxPSyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIjsNCiAgICAgICAgZWNobyAiTUFTVUtLRSBGT1JNQVQgU0VLIEJFTkVSIFNVICEhISAgICAgICAgICAgICAgICAgICAgICAgICAiOw0KCQl9DQoJCQkJCQkJCQ0KDQpmdW5jdGlvbiBjdXJsKCR1cmwsICRmaWVsZHMgPSBudWxsLCAkaGVhZGVycyA9IG51bGwpDQogICAgew0KICAgICAgICAkY2ggPSBjdXJsX2luaXQoKTsNCiAgICAgICAgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1VSTCwgJHVybCk7DQogICAgICAgIGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9SRVRVUk5UUkFOU0ZFUiwgdHJ1ZSk7DQogICAgICAgIGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9GT0xMT1dMT0NBVElPTiwgdHJ1ZSk7DQogICAgICAgIGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9TU0xfVkVSSUZZUEVFUiwgZmFsc2UpOw0KICAgICAgICBpZiAoJGZpZWxkcyAhPT0gbnVsbCkgew0KICAgICAgICAgICAgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1BPU1QsIDEpOw0KICAgICAgICAgICAgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1BPU1RGSUVMRFMsICRmaWVsZHMpOw0KICAgICAgICB9DQogICAgICAgIGlmICgkaGVhZGVycyAhPT0gbnVsbCkgew0KICAgICAgICAgICAgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX0hUVFBIRUFERVIsICRoZWFkZXJzKTsNCiAgICAgICAgfQ0KICAgICAgICAkcmVzdWx0ICAgPSBjdXJsX2V4ZWMoJGNoKTsNCiAgICAgICAgJGh0dHBjb2RlID0gY3VybF9nZXRpbmZvKCRjaCwgQ1VSTElORk9fSFRUUF9DT0RFKTsNCiAgICAgICAgY3VybF9jbG9zZSgkY2gpOw0KICAgICAgICANCiAgICAgICAgcmV0dXJuIGFycmF5KA0KICAgICAgICAgICAgJHJlc3VsdCwNCiAgICAgICAgICAgICRodHRwY29kZQ0KICAgICAgICApOw0KCX0NCiAgICBrb250b2wgOg==")); ?>
